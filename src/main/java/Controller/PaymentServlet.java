package Controller;

import DAO.CustomerDao;
import DAO.PackageDao;
import DAO.UserDao;
import Model.Customer;
import Model.Package;
import Model.CustomerMembership;
import Model.MembershipPackage;
import java.io.IOException;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

@WebServlet("/payment")
public class PaymentServlet extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String cardIdStr = request.getParameter("cardId");
        HttpSession session = request.getSession(false);
        Integer accountId = null;
        if (session != null) {
            Object accObj = session.getAttribute("accountId");
            if (accObj instanceof Integer) {
                accountId = (Integer) accObj;
            } else if (accObj instanceof String) {
                accountId = Integer.parseInt((String) accObj);
            }
        }

        // L·∫•y activeMembership cho user hi·ªán t·∫°i
        CustomerMembership activeMembership = null;
        if (accountId != null) {
            CustomerDao customerDao = new CustomerDao();
            activeMembership = customerDao.getActiveMembershipByAccountId(accountId);
            request.setAttribute("activeMembership", activeMembership);
        }

        if (cardIdStr != null) {
            int cardId = Integer.parseInt(cardIdStr);
            PackageDao packageDao = new PackageDao();
            Package pkg = packageDao.getPackageById(cardId);

            if (pkg != null) {
                request.setAttribute("pkg", pkg);
                request.getRequestDispatcher("/WEB-INF/View/customers/payment.jsp").forward(request, response);
            } else {
                request.setAttribute("error", "Kh√¥ng t√¨m th·∫•y g√≥i t·∫≠p!");
                request.getRequestDispatcher("/WEB-INF/View/customers/payment.jsp").forward(request, response);
            }
        } else {
            response.sendRedirect("membership");
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession(false);
        if (session == null) {
            response.sendRedirect("login.jsp");
            return;
        }

        Object accObj = session.getAttribute("accountId");
        if (accObj == null) {
            response.sendRedirect("login.jsp");
            return;
        }

        int accountId;
        if (accObj instanceof Integer) {
            accountId = (Integer) accObj;
        } else if (accObj instanceof String) {
            accountId = Integer.parseInt((String) accObj);
        } else {
            response.sendRedirect("login.jsp");
            return;
        }

        String cardIdStr = request.getParameter("cardId");
        if (accountId != 0 && cardIdStr != null) {
            int packageId = Integer.parseInt(cardIdStr);
            PackageDao packageDao = new PackageDao();
            Package pkg = packageDao.getPackageById(packageId);

            if (pkg == null) {
                request.setAttribute("error", "Kh√¥ng t√¨m th·∫•y g√≥i t·∫≠p!");
                request.getRequestDispatcher("/WEB-INF/View/customers/payment.jsp").forward(request, response);
                return;
            }

            // üö´ Ki·ªÉm tra membership ƒë√£ t·ªìn t·∫°i ch∆∞a
            CustomerDao customerDao = new CustomerDao();
            UserDao userdao = new UserDao();
            CustomerMembership activeMembership = customerDao.getActiveMembershipByAccountId(accountId);
            request.setAttribute("activeMembership", activeMembership);

            long daysLeft = 0;
            if (activeMembership != null) {
                java.time.LocalDate now = java.time.LocalDate.now();
                java.time.LocalDate end = activeMembership.getEndDate();
                daysLeft = java.time.temporal.ChronoUnit.DAYS.between(now, end);
                if (daysLeft < 0) {
                    daysLeft = 0;
                }
                request.setAttribute("daysLeft", daysLeft);
            }

            if (activeMembership != null && !"cancelled".equalsIgnoreCase(activeMembership.getPaymentStatus())) {
                // N·∫øu membership t·ªìn t·∫°i v√† KH√îNG ph·∫£i "cancelled" th√¨ m·ªõi ch·∫∑n ƒëƒÉng k√Ω m·ªõi
                request.setAttribute("pkg", pkg);
                request.setAttribute("error", "B·∫°n ƒë√£ c√≥ m·ªôt g√≥i membership ƒëang ho·∫°t ƒë·ªông v√† kh√¥ng th·ªÉ ƒëƒÉng k√Ω th√™m.");
                response.sendRedirect(request.getContextPath() + "/homepage");
                return;
            }
            // N·∫øu l√† "cancelled" th√¨ ti·∫øp t·ª•c cho ƒëƒÉng k√Ω!

            // ‚úÖ Ti·∫øp t·ª•c t·∫°o m·ªõi membership n·∫øu h·ª£p l·ªá
            MembershipPackage membershipPackage = packageDao.convertToMembershipPackage(pkg);

            // L·∫§Y T√ôY CH·ªåN T·ª™ FORM
            String applyOption = request.getParameter("applyOption"); // C√≥ th·ªÉ l√† "applyNow" ho·∫∑c "applyLater"
            java.time.LocalDate newStart;
            if ("applyLater".equals(applyOption) && activeMembership != null && "cancelled".equals(activeMembership.getPaymentStatus())) {
                newStart = activeMembership.getEndDate().plusDays(1);
            } else {
                newStart = java.time.LocalDate.now();
                // N·∫øu √°p d·ª•ng NGAY th√¨ update end_date membership c≈©!
                if (activeMembership != null && "cancelled".equals(activeMembership.getPaymentStatus())) {
                    // Update end_date c·ªßa g√≥i c≈© v·ªÅ ng√†y hi·ªán t·∫°i
                    customerDao.updateMembershipEndDate(activeMembership.getMembershipId(), newStart.minusDays(1));
                }
            }
            java.time.LocalDate newEnd = newStart.plusDays(pkg.getDurationDays());

            CustomerMembership membership = new CustomerMembership();
            Customer customer = null;
            try {
                customer = userdao.getCustomerByAccountId(accountId);
            } catch (SQLException ex) {
                Logger.getLogger(PaymentServlet.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (customer == null) {
                System.out.println("DEBUG: customer l√† null");
                // C√≥ th·ªÉ chuy·ªÉn h∆∞·ªõng v·ªÅ trang b√°o l·ªói ·ªü ƒë√¢y lu√¥n!
                request.setAttribute("error", "Kh√¥ng t√¨m th·∫•y th√¥ng tin kh√°ch h√†ng!");
                request.getRequestDispatcher("/WEB-INF/View/customers/payment.jsp").forward(request, response);
                return;
            }
            if (customer.getAccount() == null) {
                System.out.println("DEBUG: account l√† null");
                // C√≥ th·ªÉ t·∫°o m·ªõi ho·∫∑c b√°o l·ªói, tu·ª≥ √Ω
                customer.setAccount(new Model.Account());
            }

            System.out.println("membership: " + membership);
            System.out.println("membership.getCustomer(): " + (membership != null ? membership.getCustomer() : "null"));
            System.out.println("membership.getCustomer().getAccount(): "
                    + (membership != null && membership.getCustomer() != null ? membership.getCustomer().getAccount() : "null"));
            customer.getAccount().setAccountId(accountId);
            membership.setCustomer(customer);
            membership.getCustomer().getAccount().setAccountId(accountId);
            membership.setMembershipPackage(membershipPackage);
            membership.setStartDate(newStart);
            membership.setEndDate(newEnd);
            membership.setPaymentStatus("PAID");

            boolean added = customerDao.addMembership(membership);

            if (added) {
                request.setAttribute("pkg", pkg);
                request.setAttribute("success", "Thanh to√°n th√†nh c√¥ng! B·∫°n ƒë√£ ƒëƒÉng k√Ω g√≥i " + pkg.getName() + ". S·∫Ω t·ª± ƒë·ªông chuy·ªÉn v·ªÅ trang ch·ªß sau v√†i gi√¢y.");
                request.getRequestDispatcher("/WEB-INF/View/customers/payment.jsp").forward(request, response);
            } else {
                request.setAttribute("pkg", pkg);
                request.setAttribute("error", "ƒê√£ c√≥ l·ªói x·∫£y ra khi ghi membership. Vui l√≤ng th·ª≠ l·∫°i!");
                request.getRequestDispatcher("/WEB-INF/View/customers/payment.jsp").forward(request, response);
            }
        } else {
            response.sendRedirect("login.jsp");
        }
    }
}
